/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jio.portlet.startups.model.impl;

import com.jio.portlet.startups.model.Startups;
import com.jio.portlet.startups.model.StartupsModel;
import com.jio.portlet.startups.model.StartupsSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Startups service. Represents a row in the &quot;gns_Startups&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jio.portlet.startups.model.StartupsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StartupsImpl}.
 * </p>
 *
 * @author rajnikant.donga
 * @see StartupsImpl
 * @see com.jio.portlet.startups.model.Startups
 * @see com.jio.portlet.startups.model.StartupsModel
 * @generated
 */
@JSON(strict = true)
public class StartupsModelImpl extends BaseModelImpl<Startups>
	implements StartupsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a startups model instance should use the {@link com.jio.portlet.startups.model.Startups} interface instead.
	 */
	public static final String TABLE_NAME = "gns_Startups";
	public static final Object[][] TABLE_COLUMNS = {
			{ "startupsId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "companyName", Types.VARCHAR },
			{ "category", Types.VARCHAR },
			{ "startupImage", Types.BIGINT },
			{ "youtubeImages", Types.BIGINT },
			{ "youtubeLink", Types.VARCHAR },
			{ "shortDescription", Types.VARCHAR },
			{ "startupDesc", Types.VARCHAR },
			{ "longDescription", Types.VARCHAR },
			{ "twitter", Types.VARCHAR },
			{ "linkedIn", Types.VARCHAR },
			{ "youTube", Types.VARCHAR },
			{ "number_", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table gns_Startups (startupsId LONG not null primary key,name VARCHAR(75) null,companyName VARCHAR(75) null,category VARCHAR(75) null,startupImage LONG,youtubeImages LONG,youtubeLink VARCHAR(75) null,shortDescription STRING null,startupDesc STRING null,longDescription STRING null,twitter VARCHAR(75) null,linkedIn VARCHAR(75) null,youTube VARCHAR(75) null,number_ LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table gns_Startups";
	public static final String ORDER_BY_JPQL = " ORDER BY startups.startupsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY gns_Startups.startupsId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jio.portlet.startups.model.Startups"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jio.portlet.startups.model.Startups"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Startups toModel(StartupsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Startups model = new StartupsImpl();

		model.setStartupsId(soapModel.getStartupsId());
		model.setName(soapModel.getName());
		model.setCompanyName(soapModel.getCompanyName());
		model.setCategory(soapModel.getCategory());
		model.setStartupImage(soapModel.getStartupImage());
		model.setYoutubeImages(soapModel.getYoutubeImages());
		model.setYoutubeLink(soapModel.getYoutubeLink());
		model.setShortDescription(soapModel.getShortDescription());
		model.setStartupDesc(soapModel.getStartupDesc());
		model.setLongDescription(soapModel.getLongDescription());
		model.setTwitter(soapModel.getTwitter());
		model.setLinkedIn(soapModel.getLinkedIn());
		model.setYouTube(soapModel.getYouTube());
		model.setNumber(soapModel.getNumber());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Startups> toModels(StartupsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Startups> models = new ArrayList<Startups>(soapModels.length);

		for (StartupsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jio.portlet.startups.model.Startups"));

	public StartupsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _startupsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStartupsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _startupsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Startups.class;
	}

	@Override
	public String getModelClassName() {
		return Startups.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("startupsId", getStartupsId());
		attributes.put("name", getName());
		attributes.put("companyName", getCompanyName());
		attributes.put("category", getCategory());
		attributes.put("startupImage", getStartupImage());
		attributes.put("youtubeImages", getYoutubeImages());
		attributes.put("youtubeLink", getYoutubeLink());
		attributes.put("shortDescription", getShortDescription());
		attributes.put("startupDesc", getStartupDesc());
		attributes.put("longDescription", getLongDescription());
		attributes.put("twitter", getTwitter());
		attributes.put("linkedIn", getLinkedIn());
		attributes.put("youTube", getYouTube());
		attributes.put("number", getNumber());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long startupsId = (Long)attributes.get("startupsId");

		if (startupsId != null) {
			setStartupsId(startupsId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String companyName = (String)attributes.get("companyName");

		if (companyName != null) {
			setCompanyName(companyName);
		}

		String category = (String)attributes.get("category");

		if (category != null) {
			setCategory(category);
		}

		Long startupImage = (Long)attributes.get("startupImage");

		if (startupImage != null) {
			setStartupImage(startupImage);
		}

		Long youtubeImages = (Long)attributes.get("youtubeImages");

		if (youtubeImages != null) {
			setYoutubeImages(youtubeImages);
		}

		String youtubeLink = (String)attributes.get("youtubeLink");

		if (youtubeLink != null) {
			setYoutubeLink(youtubeLink);
		}

		String shortDescription = (String)attributes.get("shortDescription");

		if (shortDescription != null) {
			setShortDescription(shortDescription);
		}

		String startupDesc = (String)attributes.get("startupDesc");

		if (startupDesc != null) {
			setStartupDesc(startupDesc);
		}

		String longDescription = (String)attributes.get("longDescription");

		if (longDescription != null) {
			setLongDescription(longDescription);
		}

		String twitter = (String)attributes.get("twitter");

		if (twitter != null) {
			setTwitter(twitter);
		}

		String linkedIn = (String)attributes.get("linkedIn");

		if (linkedIn != null) {
			setLinkedIn(linkedIn);
		}

		String youTube = (String)attributes.get("youTube");

		if (youTube != null) {
			setYouTube(youTube);
		}

		Long number = (Long)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getStartupsId() {
		return _startupsId;
	}

	@Override
	public void setStartupsId(long startupsId) {
		_startupsId = startupsId;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		_companyName = companyName;
	}

	@JSON
	@Override
	public String getCategory() {
		if (_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _category;
		}
	}

	@Override
	public void setCategory(String category) {
		_category = category;
	}

	@JSON
	@Override
	public Long getStartupImage() {
		return _startupImage;
	}

	@Override
	public void setStartupImage(Long startupImage) {
		_startupImage = startupImage;
	}

	@JSON
	@Override
	public Long getYoutubeImages() {
		return _youtubeImages;
	}

	@Override
	public void setYoutubeImages(Long youtubeImages) {
		_youtubeImages = youtubeImages;
	}

	@JSON
	@Override
	public String getYoutubeLink() {
		if (_youtubeLink == null) {
			return StringPool.BLANK;
		}
		else {
			return _youtubeLink;
		}
	}

	@Override
	public void setYoutubeLink(String youtubeLink) {
		_youtubeLink = youtubeLink;
	}

	@JSON
	@Override
	public String getShortDescription() {
		if (_shortDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortDescription;
		}
	}

	@Override
	public void setShortDescription(String shortDescription) {
		_shortDescription = shortDescription;
	}

	@JSON
	@Override
	public String getStartupDesc() {
		if (_startupDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _startupDesc;
		}
	}

	@Override
	public void setStartupDesc(String startupDesc) {
		_startupDesc = startupDesc;
	}

	@JSON
	@Override
	public String getLongDescription() {
		if (_longDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _longDescription;
		}
	}

	@Override
	public void setLongDescription(String longDescription) {
		_longDescription = longDescription;
	}

	@JSON
	@Override
	public String getTwitter() {
		if (_twitter == null) {
			return StringPool.BLANK;
		}
		else {
			return _twitter;
		}
	}

	@Override
	public void setTwitter(String twitter) {
		_twitter = twitter;
	}

	@JSON
	@Override
	public String getLinkedIn() {
		if (_linkedIn == null) {
			return StringPool.BLANK;
		}
		else {
			return _linkedIn;
		}
	}

	@Override
	public void setLinkedIn(String linkedIn) {
		_linkedIn = linkedIn;
	}

	@JSON
	@Override
	public String getYouTube() {
		if (_youTube == null) {
			return StringPool.BLANK;
		}
		else {
			return _youTube;
		}
	}

	@Override
	public void setYouTube(String youTube) {
		_youTube = youTube;
	}

	@JSON
	@Override
	public Long getNumber() {
		return _number;
	}

	@Override
	public void setNumber(Long number) {
		_number = number;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Startups.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Startups toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Startups)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StartupsImpl startupsImpl = new StartupsImpl();

		startupsImpl.setStartupsId(getStartupsId());
		startupsImpl.setName(getName());
		startupsImpl.setCompanyName(getCompanyName());
		startupsImpl.setCategory(getCategory());
		startupsImpl.setStartupImage(getStartupImage());
		startupsImpl.setYoutubeImages(getYoutubeImages());
		startupsImpl.setYoutubeLink(getYoutubeLink());
		startupsImpl.setShortDescription(getShortDescription());
		startupsImpl.setStartupDesc(getStartupDesc());
		startupsImpl.setLongDescription(getLongDescription());
		startupsImpl.setTwitter(getTwitter());
		startupsImpl.setLinkedIn(getLinkedIn());
		startupsImpl.setYouTube(getYouTube());
		startupsImpl.setNumber(getNumber());
		startupsImpl.setGroupId(getGroupId());
		startupsImpl.setCompanyId(getCompanyId());
		startupsImpl.setCreateDate(getCreateDate());
		startupsImpl.setModifiedDate(getModifiedDate());

		startupsImpl.resetOriginalValues();

		return startupsImpl;
	}

	@Override
	public int compareTo(Startups startups) {
		long primaryKey = startups.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Startups)) {
			return false;
		}

		Startups startups = (Startups)obj;

		long primaryKey = startups.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Startups> toCacheModel() {
		StartupsCacheModel startupsCacheModel = new StartupsCacheModel();

		startupsCacheModel.startupsId = getStartupsId();

		startupsCacheModel.name = getName();

		String name = startupsCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			startupsCacheModel.name = null;
		}

		startupsCacheModel.companyName = getCompanyName();

		String companyName = startupsCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			startupsCacheModel.companyName = null;
		}

		startupsCacheModel.category = getCategory();

		String category = startupsCacheModel.category;

		if ((category != null) && (category.length() == 0)) {
			startupsCacheModel.category = null;
		}

		startupsCacheModel.startupImage = getStartupImage();

		startupsCacheModel.youtubeImages = getYoutubeImages();

		startupsCacheModel.youtubeLink = getYoutubeLink();

		String youtubeLink = startupsCacheModel.youtubeLink;

		if ((youtubeLink != null) && (youtubeLink.length() == 0)) {
			startupsCacheModel.youtubeLink = null;
		}

		startupsCacheModel.shortDescription = getShortDescription();

		String shortDescription = startupsCacheModel.shortDescription;

		if ((shortDescription != null) && (shortDescription.length() == 0)) {
			startupsCacheModel.shortDescription = null;
		}

		startupsCacheModel.startupDesc = getStartupDesc();

		String startupDesc = startupsCacheModel.startupDesc;

		if ((startupDesc != null) && (startupDesc.length() == 0)) {
			startupsCacheModel.startupDesc = null;
		}

		startupsCacheModel.longDescription = getLongDescription();

		String longDescription = startupsCacheModel.longDescription;

		if ((longDescription != null) && (longDescription.length() == 0)) {
			startupsCacheModel.longDescription = null;
		}

		startupsCacheModel.twitter = getTwitter();

		String twitter = startupsCacheModel.twitter;

		if ((twitter != null) && (twitter.length() == 0)) {
			startupsCacheModel.twitter = null;
		}

		startupsCacheModel.linkedIn = getLinkedIn();

		String linkedIn = startupsCacheModel.linkedIn;

		if ((linkedIn != null) && (linkedIn.length() == 0)) {
			startupsCacheModel.linkedIn = null;
		}

		startupsCacheModel.youTube = getYouTube();

		String youTube = startupsCacheModel.youTube;

		if ((youTube != null) && (youTube.length() == 0)) {
			startupsCacheModel.youTube = null;
		}

		startupsCacheModel.number = getNumber();

		startupsCacheModel.groupId = getGroupId();

		startupsCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			startupsCacheModel.createDate = createDate.getTime();
		}
		else {
			startupsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			startupsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			startupsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return startupsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{startupsId=");
		sb.append(getStartupsId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", companyName=");
		sb.append(getCompanyName());
		sb.append(", category=");
		sb.append(getCategory());
		sb.append(", startupImage=");
		sb.append(getStartupImage());
		sb.append(", youtubeImages=");
		sb.append(getYoutubeImages());
		sb.append(", youtubeLink=");
		sb.append(getYoutubeLink());
		sb.append(", shortDescription=");
		sb.append(getShortDescription());
		sb.append(", startupDesc=");
		sb.append(getStartupDesc());
		sb.append(", longDescription=");
		sb.append(getLongDescription());
		sb.append(", twitter=");
		sb.append(getTwitter());
		sb.append(", linkedIn=");
		sb.append(getLinkedIn());
		sb.append(", youTube=");
		sb.append(getYouTube());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.jio.portlet.startups.model.Startups");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>startupsId</column-name><column-value><![CDATA[");
		sb.append(getStartupsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyName</column-name><column-value><![CDATA[");
		sb.append(getCompanyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startupImage</column-name><column-value><![CDATA[");
		sb.append(getStartupImage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>youtubeImages</column-name><column-value><![CDATA[");
		sb.append(getYoutubeImages());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>youtubeLink</column-name><column-value><![CDATA[");
		sb.append(getYoutubeLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortDescription</column-name><column-value><![CDATA[");
		sb.append(getShortDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startupDesc</column-name><column-value><![CDATA[");
		sb.append(getStartupDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longDescription</column-name><column-value><![CDATA[");
		sb.append(getLongDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>twitter</column-name><column-value><![CDATA[");
		sb.append(getTwitter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>linkedIn</column-name><column-value><![CDATA[");
		sb.append(getLinkedIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>youTube</column-name><column-value><![CDATA[");
		sb.append(getYouTube());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Startups.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Startups.class
		};
	private long _startupsId;
	private String _name;
	private String _companyName;
	private String _category;
	private Long _startupImage;
	private Long _youtubeImages;
	private String _youtubeLink;
	private String _shortDescription;
	private String _startupDesc;
	private String _longDescription;
	private String _twitter;
	private String _linkedIn;
	private String _youTube;
	private Long _number;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private Startups _escapedModel;
}