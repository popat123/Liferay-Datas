/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jio.portlet.gallery.model.impl;

import com.jio.portlet.gallery.model.Gallery;
import com.jio.portlet.gallery.model.GalleryModel;
import com.jio.portlet.gallery.model.GallerySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Gallery service. Represents a row in the &quot;rf_Gallery&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jio.portlet.gallery.model.GalleryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GalleryImpl}.
 * </p>
 *
 * @author Reliance
 * @see GalleryImpl
 * @see com.jio.portlet.gallery.model.Gallery
 * @see com.jio.portlet.gallery.model.GalleryModel
 * @generated
 */
@JSON(strict = true)
public class GalleryModelImpl extends BaseModelImpl<Gallery>
	implements GalleryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a gallery model instance should use the {@link com.jio.portlet.gallery.model.Gallery} interface instead.
	 */
	public static final String TABLE_NAME = "rf_Gallery";
	public static final Object[][] TABLE_COLUMNS = {
			{ "galleryId", Types.BIGINT },
			{ "type_", Types.VARCHAR },
			{ "thumbnailName", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "mainCategory", Types.VARCHAR },
			{ "projectImagesPath", Types.VARCHAR },
			{ "galleryImagesId", Types.BIGINT },
			{ "VideoImagesId", Types.BIGINT },
			{ "thumbnailImagesId", Types.BIGINT },
			{ "isVideo", Types.BOOLEAN },
			{ "isIMG", Types.BOOLEAN },
			{ "youTubeLink", Types.BOOLEAN },
			{ "videosImagPriority", Types.BOOLEAN },
			{ "gallryImagPriority", Types.BOOLEAN },
			{ "demoLink", Types.VARCHAR },
			{ "liveLink", Types.VARCHAR },
			{ "number_", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table rf_Gallery (galleryId LONG not null primary key,type_ VARCHAR(75) null,thumbnailName STRING null,name STRING null,mainCategory VARCHAR(75) null,projectImagesPath STRING null,galleryImagesId LONG,VideoImagesId LONG,thumbnailImagesId LONG,isVideo BOOLEAN,isIMG BOOLEAN,youTubeLink BOOLEAN,videosImagPriority BOOLEAN,gallryImagPriority BOOLEAN,demoLink VARCHAR(75) null,liveLink VARCHAR(75) null,number_ LONG,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table rf_Gallery";
	public static final String ORDER_BY_JPQL = " ORDER BY gallery.number DESC";
	public static final String ORDER_BY_SQL = " ORDER BY rf_Gallery.number_ DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jio.portlet.gallery.model.Gallery"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jio.portlet.gallery.model.Gallery"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.jio.portlet.gallery.model.Gallery"),
			true);
	public static long GALLRYIMAGPRIORITY_COLUMN_BITMASK = 1L;
	public static long VIDEOSIMAGPRIORITY_COLUMN_BITMASK = 2L;
	public static long NUMBER_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Gallery toModel(GallerySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Gallery model = new GalleryImpl();

		model.setGalleryId(soapModel.getGalleryId());
		model.setType(soapModel.getType());
		model.setThumbnailName(soapModel.getThumbnailName());
		model.setName(soapModel.getName());
		model.setMainCategory(soapModel.getMainCategory());
		model.setProjectImagesPath(soapModel.getProjectImagesPath());
		model.setGalleryImagesId(soapModel.getGalleryImagesId());
		model.setVideoImagesId(soapModel.getVideoImagesId());
		model.setThumbnailImagesId(soapModel.getThumbnailImagesId());
		model.setIsVideo(soapModel.getIsVideo());
		model.setIsIMG(soapModel.getIsIMG());
		model.setYouTubeLink(soapModel.getYouTubeLink());
		model.setVideosImagPriority(soapModel.getVideosImagPriority());
		model.setGallryImagPriority(soapModel.getGallryImagPriority());
		model.setDemoLink(soapModel.getDemoLink());
		model.setLiveLink(soapModel.getLiveLink());
		model.setNumber(soapModel.getNumber());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Gallery> toModels(GallerySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Gallery> models = new ArrayList<Gallery>(soapModels.length);

		for (GallerySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jio.portlet.gallery.model.Gallery"));

	public GalleryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _galleryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setGalleryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _galleryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Gallery.class;
	}

	@Override
	public String getModelClassName() {
		return Gallery.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("galleryId", getGalleryId());
		attributes.put("type", getType());
		attributes.put("thumbnailName", getThumbnailName());
		attributes.put("name", getName());
		attributes.put("mainCategory", getMainCategory());
		attributes.put("projectImagesPath", getProjectImagesPath());
		attributes.put("galleryImagesId", getGalleryImagesId());
		attributes.put("VideoImagesId", getVideoImagesId());
		attributes.put("thumbnailImagesId", getThumbnailImagesId());
		attributes.put("isVideo", getIsVideo());
		attributes.put("isIMG", getIsIMG());
		attributes.put("youTubeLink", getYouTubeLink());
		attributes.put("videosImagPriority", getVideosImagPriority());
		attributes.put("gallryImagPriority", getGallryImagPriority());
		attributes.put("demoLink", getDemoLink());
		attributes.put("liveLink", getLiveLink());
		attributes.put("number", getNumber());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long galleryId = (Long)attributes.get("galleryId");

		if (galleryId != null) {
			setGalleryId(galleryId);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		String thumbnailName = (String)attributes.get("thumbnailName");

		if (thumbnailName != null) {
			setThumbnailName(thumbnailName);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String mainCategory = (String)attributes.get("mainCategory");

		if (mainCategory != null) {
			setMainCategory(mainCategory);
		}

		String projectImagesPath = (String)attributes.get("projectImagesPath");

		if (projectImagesPath != null) {
			setProjectImagesPath(projectImagesPath);
		}

		Long galleryImagesId = (Long)attributes.get("galleryImagesId");

		if (galleryImagesId != null) {
			setGalleryImagesId(galleryImagesId);
		}

		Long VideoImagesId = (Long)attributes.get("VideoImagesId");

		if (VideoImagesId != null) {
			setVideoImagesId(VideoImagesId);
		}

		Long thumbnailImagesId = (Long)attributes.get("thumbnailImagesId");

		if (thumbnailImagesId != null) {
			setThumbnailImagesId(thumbnailImagesId);
		}

		Boolean isVideo = (Boolean)attributes.get("isVideo");

		if (isVideo != null) {
			setIsVideo(isVideo);
		}

		Boolean isIMG = (Boolean)attributes.get("isIMG");

		if (isIMG != null) {
			setIsIMG(isIMG);
		}

		Boolean youTubeLink = (Boolean)attributes.get("youTubeLink");

		if (youTubeLink != null) {
			setYouTubeLink(youTubeLink);
		}

		Boolean videosImagPriority = (Boolean)attributes.get(
				"videosImagPriority");

		if (videosImagPriority != null) {
			setVideosImagPriority(videosImagPriority);
		}

		Boolean gallryImagPriority = (Boolean)attributes.get(
				"gallryImagPriority");

		if (gallryImagPriority != null) {
			setGallryImagPriority(gallryImagPriority);
		}

		String demoLink = (String)attributes.get("demoLink");

		if (demoLink != null) {
			setDemoLink(demoLink);
		}

		String liveLink = (String)attributes.get("liveLink");

		if (liveLink != null) {
			setLiveLink(liveLink);
		}

		Long number = (Long)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getGalleryId() {
		return _galleryId;
	}

	@Override
	public void setGalleryId(long galleryId) {
		_galleryId = galleryId;
	}

	@JSON
	@Override
	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	@Override
	public void setType(String type) {
		_type = type;
	}

	@JSON
	@Override
	public String getThumbnailName() {
		if (_thumbnailName == null) {
			return StringPool.BLANK;
		}
		else {
			return _thumbnailName;
		}
	}

	@Override
	public void setThumbnailName(String thumbnailName) {
		_thumbnailName = thumbnailName;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@JSON
	@Override
	public String getMainCategory() {
		if (_mainCategory == null) {
			return StringPool.BLANK;
		}
		else {
			return _mainCategory;
		}
	}

	@Override
	public void setMainCategory(String mainCategory) {
		_mainCategory = mainCategory;
	}

	@JSON
	@Override
	public String getProjectImagesPath() {
		if (_projectImagesPath == null) {
			return StringPool.BLANK;
		}
		else {
			return _projectImagesPath;
		}
	}

	@Override
	public void setProjectImagesPath(String projectImagesPath) {
		_projectImagesPath = projectImagesPath;
	}

	@JSON
	@Override
	public Long getGalleryImagesId() {
		return _galleryImagesId;
	}

	@Override
	public void setGalleryImagesId(Long galleryImagesId) {
		_galleryImagesId = galleryImagesId;
	}

	@JSON
	@Override
	public Long getVideoImagesId() {
		return _VideoImagesId;
	}

	@Override
	public void setVideoImagesId(Long VideoImagesId) {
		_VideoImagesId = VideoImagesId;
	}

	@JSON
	@Override
	public Long getThumbnailImagesId() {
		return _thumbnailImagesId;
	}

	@Override
	public void setThumbnailImagesId(Long thumbnailImagesId) {
		_thumbnailImagesId = thumbnailImagesId;
	}

	@JSON
	@Override
	public boolean getIsVideo() {
		return _isVideo;
	}

	@Override
	public boolean isIsVideo() {
		return _isVideo;
	}

	@Override
	public void setIsVideo(boolean isVideo) {
		_isVideo = isVideo;
	}

	@JSON
	@Override
	public boolean getIsIMG() {
		return _isIMG;
	}

	@Override
	public boolean isIsIMG() {
		return _isIMG;
	}

	@Override
	public void setIsIMG(boolean isIMG) {
		_isIMG = isIMG;
	}

	@JSON
	@Override
	public boolean getYouTubeLink() {
		return _youTubeLink;
	}

	@Override
	public boolean isYouTubeLink() {
		return _youTubeLink;
	}

	@Override
	public void setYouTubeLink(boolean youTubeLink) {
		_youTubeLink = youTubeLink;
	}

	@JSON
	@Override
	public boolean getVideosImagPriority() {
		return _videosImagPriority;
	}

	@Override
	public boolean isVideosImagPriority() {
		return _videosImagPriority;
	}

	@Override
	public void setVideosImagPriority(boolean videosImagPriority) {
		_columnBitmask |= VIDEOSIMAGPRIORITY_COLUMN_BITMASK;

		if (!_setOriginalVideosImagPriority) {
			_setOriginalVideosImagPriority = true;

			_originalVideosImagPriority = _videosImagPriority;
		}

		_videosImagPriority = videosImagPriority;
	}

	public boolean getOriginalVideosImagPriority() {
		return _originalVideosImagPriority;
	}

	@JSON
	@Override
	public boolean getGallryImagPriority() {
		return _gallryImagPriority;
	}

	@Override
	public boolean isGallryImagPriority() {
		return _gallryImagPriority;
	}

	@Override
	public void setGallryImagPriority(boolean gallryImagPriority) {
		_columnBitmask |= GALLRYIMAGPRIORITY_COLUMN_BITMASK;

		if (!_setOriginalGallryImagPriority) {
			_setOriginalGallryImagPriority = true;

			_originalGallryImagPriority = _gallryImagPriority;
		}

		_gallryImagPriority = gallryImagPriority;
	}

	public boolean getOriginalGallryImagPriority() {
		return _originalGallryImagPriority;
	}

	@JSON
	@Override
	public String getDemoLink() {
		if (_demoLink == null) {
			return StringPool.BLANK;
		}
		else {
			return _demoLink;
		}
	}

	@Override
	public void setDemoLink(String demoLink) {
		_demoLink = demoLink;
	}

	@JSON
	@Override
	public String getLiveLink() {
		if (_liveLink == null) {
			return StringPool.BLANK;
		}
		else {
			return _liveLink;
		}
	}

	@Override
	public void setLiveLink(String liveLink) {
		_liveLink = liveLink;
	}

	@JSON
	@Override
	public long getNumber() {
		return _number;
	}

	@Override
	public void setNumber(long number) {
		_columnBitmask = -1L;

		_number = number;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Gallery.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Gallery toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Gallery)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GalleryImpl galleryImpl = new GalleryImpl();

		galleryImpl.setGalleryId(getGalleryId());
		galleryImpl.setType(getType());
		galleryImpl.setThumbnailName(getThumbnailName());
		galleryImpl.setName(getName());
		galleryImpl.setMainCategory(getMainCategory());
		galleryImpl.setProjectImagesPath(getProjectImagesPath());
		galleryImpl.setGalleryImagesId(getGalleryImagesId());
		galleryImpl.setVideoImagesId(getVideoImagesId());
		galleryImpl.setThumbnailImagesId(getThumbnailImagesId());
		galleryImpl.setIsVideo(getIsVideo());
		galleryImpl.setIsIMG(getIsIMG());
		galleryImpl.setYouTubeLink(getYouTubeLink());
		galleryImpl.setVideosImagPriority(getVideosImagPriority());
		galleryImpl.setGallryImagPriority(getGallryImagPriority());
		galleryImpl.setDemoLink(getDemoLink());
		galleryImpl.setLiveLink(getLiveLink());
		galleryImpl.setNumber(getNumber());
		galleryImpl.setCreateDate(getCreateDate());
		galleryImpl.setModifiedDate(getModifiedDate());

		galleryImpl.resetOriginalValues();

		return galleryImpl;
	}

	@Override
	public int compareTo(Gallery gallery) {
		int value = 0;

		if (getNumber() < gallery.getNumber()) {
			value = -1;
		}
		else if (getNumber() > gallery.getNumber()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Gallery)) {
			return false;
		}

		Gallery gallery = (Gallery)obj;

		long primaryKey = gallery.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		GalleryModelImpl galleryModelImpl = this;

		galleryModelImpl._originalVideosImagPriority = galleryModelImpl._videosImagPriority;

		galleryModelImpl._setOriginalVideosImagPriority = false;

		galleryModelImpl._originalGallryImagPriority = galleryModelImpl._gallryImagPriority;

		galleryModelImpl._setOriginalGallryImagPriority = false;

		galleryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Gallery> toCacheModel() {
		GalleryCacheModel galleryCacheModel = new GalleryCacheModel();

		galleryCacheModel.galleryId = getGalleryId();

		galleryCacheModel.type = getType();

		String type = galleryCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			galleryCacheModel.type = null;
		}

		galleryCacheModel.thumbnailName = getThumbnailName();

		String thumbnailName = galleryCacheModel.thumbnailName;

		if ((thumbnailName != null) && (thumbnailName.length() == 0)) {
			galleryCacheModel.thumbnailName = null;
		}

		galleryCacheModel.name = getName();

		String name = galleryCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			galleryCacheModel.name = null;
		}

		galleryCacheModel.mainCategory = getMainCategory();

		String mainCategory = galleryCacheModel.mainCategory;

		if ((mainCategory != null) && (mainCategory.length() == 0)) {
			galleryCacheModel.mainCategory = null;
		}

		galleryCacheModel.projectImagesPath = getProjectImagesPath();

		String projectImagesPath = galleryCacheModel.projectImagesPath;

		if ((projectImagesPath != null) && (projectImagesPath.length() == 0)) {
			galleryCacheModel.projectImagesPath = null;
		}

		galleryCacheModel.galleryImagesId = getGalleryImagesId();

		galleryCacheModel.VideoImagesId = getVideoImagesId();

		galleryCacheModel.thumbnailImagesId = getThumbnailImagesId();

		galleryCacheModel.isVideo = getIsVideo();

		galleryCacheModel.isIMG = getIsIMG();

		galleryCacheModel.youTubeLink = getYouTubeLink();

		galleryCacheModel.videosImagPriority = getVideosImagPriority();

		galleryCacheModel.gallryImagPriority = getGallryImagPriority();

		galleryCacheModel.demoLink = getDemoLink();

		String demoLink = galleryCacheModel.demoLink;

		if ((demoLink != null) && (demoLink.length() == 0)) {
			galleryCacheModel.demoLink = null;
		}

		galleryCacheModel.liveLink = getLiveLink();

		String liveLink = galleryCacheModel.liveLink;

		if ((liveLink != null) && (liveLink.length() == 0)) {
			galleryCacheModel.liveLink = null;
		}

		galleryCacheModel.number = getNumber();

		Date createDate = getCreateDate();

		if (createDate != null) {
			galleryCacheModel.createDate = createDate.getTime();
		}
		else {
			galleryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			galleryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			galleryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return galleryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{galleryId=");
		sb.append(getGalleryId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", thumbnailName=");
		sb.append(getThumbnailName());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", mainCategory=");
		sb.append(getMainCategory());
		sb.append(", projectImagesPath=");
		sb.append(getProjectImagesPath());
		sb.append(", galleryImagesId=");
		sb.append(getGalleryImagesId());
		sb.append(", VideoImagesId=");
		sb.append(getVideoImagesId());
		sb.append(", thumbnailImagesId=");
		sb.append(getThumbnailImagesId());
		sb.append(", isVideo=");
		sb.append(getIsVideo());
		sb.append(", isIMG=");
		sb.append(getIsIMG());
		sb.append(", youTubeLink=");
		sb.append(getYouTubeLink());
		sb.append(", videosImagPriority=");
		sb.append(getVideosImagPriority());
		sb.append(", gallryImagPriority=");
		sb.append(getGallryImagPriority());
		sb.append(", demoLink=");
		sb.append(getDemoLink());
		sb.append(", liveLink=");
		sb.append(getLiveLink());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.jio.portlet.gallery.model.Gallery");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>galleryId</column-name><column-value><![CDATA[");
		sb.append(getGalleryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thumbnailName</column-name><column-value><![CDATA[");
		sb.append(getThumbnailName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mainCategory</column-name><column-value><![CDATA[");
		sb.append(getMainCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectImagesPath</column-name><column-value><![CDATA[");
		sb.append(getProjectImagesPath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>galleryImagesId</column-name><column-value><![CDATA[");
		sb.append(getGalleryImagesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>VideoImagesId</column-name><column-value><![CDATA[");
		sb.append(getVideoImagesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>thumbnailImagesId</column-name><column-value><![CDATA[");
		sb.append(getThumbnailImagesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isVideo</column-name><column-value><![CDATA[");
		sb.append(getIsVideo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isIMG</column-name><column-value><![CDATA[");
		sb.append(getIsIMG());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>youTubeLink</column-name><column-value><![CDATA[");
		sb.append(getYouTubeLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videosImagPriority</column-name><column-value><![CDATA[");
		sb.append(getVideosImagPriority());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gallryImagPriority</column-name><column-value><![CDATA[");
		sb.append(getGallryImagPriority());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>demoLink</column-name><column-value><![CDATA[");
		sb.append(getDemoLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>liveLink</column-name><column-value><![CDATA[");
		sb.append(getLiveLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Gallery.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Gallery.class
		};
	private long _galleryId;
	private String _type;
	private String _thumbnailName;
	private String _name;
	private String _mainCategory;
	private String _projectImagesPath;
	private Long _galleryImagesId;
	private Long _VideoImagesId;
	private Long _thumbnailImagesId;
	private boolean _isVideo;
	private boolean _isIMG;
	private boolean _youTubeLink;
	private boolean _videosImagPriority;
	private boolean _originalVideosImagPriority;
	private boolean _setOriginalVideosImagPriority;
	private boolean _gallryImagPriority;
	private boolean _originalGallryImagPriority;
	private boolean _setOriginalGallryImagPriority;
	private String _demoLink;
	private String _liveLink;
	private long _number;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private Gallery _escapedModel;
}