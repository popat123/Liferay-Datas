/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jio.portlet.gallery.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Gallery service. Represents a row in the &quot;rf_Gallery&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.jio.portlet.gallery.model.impl.GalleryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.jio.portlet.gallery.model.impl.GalleryImpl}.
 * </p>
 *
 * @author Reliance
 * @see Gallery
 * @see com.jio.portlet.gallery.model.impl.GalleryImpl
 * @see com.jio.portlet.gallery.model.impl.GalleryModelImpl
 * @generated
 */
public interface GalleryModel extends BaseModel<Gallery> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a gallery model instance should use the {@link Gallery} interface instead.
	 */

	/**
	 * Returns the primary key of this gallery.
	 *
	 * @return the primary key of this gallery
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this gallery.
	 *
	 * @param primaryKey the primary key of this gallery
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the gallery ID of this gallery.
	 *
	 * @return the gallery ID of this gallery
	 */
	public long getGalleryId();

	/**
	 * Sets the gallery ID of this gallery.
	 *
	 * @param galleryId the gallery ID of this gallery
	 */
	public void setGalleryId(long galleryId);

	/**
	 * Returns the type of this gallery.
	 *
	 * @return the type of this gallery
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this gallery.
	 *
	 * @param type the type of this gallery
	 */
	public void setType(String type);

	/**
	 * Returns the thumbnail name of this gallery.
	 *
	 * @return the thumbnail name of this gallery
	 */
	@AutoEscape
	public String getThumbnailName();

	/**
	 * Sets the thumbnail name of this gallery.
	 *
	 * @param thumbnailName the thumbnail name of this gallery
	 */
	public void setThumbnailName(String thumbnailName);

	/**
	 * Returns the name of this gallery.
	 *
	 * @return the name of this gallery
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this gallery.
	 *
	 * @param name the name of this gallery
	 */
	public void setName(String name);

	/**
	 * Returns the main category of this gallery.
	 *
	 * @return the main category of this gallery
	 */
	@AutoEscape
	public String getMainCategory();

	/**
	 * Sets the main category of this gallery.
	 *
	 * @param mainCategory the main category of this gallery
	 */
	public void setMainCategory(String mainCategory);

	/**
	 * Returns the project images path of this gallery.
	 *
	 * @return the project images path of this gallery
	 */
	@AutoEscape
	public String getProjectImagesPath();

	/**
	 * Sets the project images path of this gallery.
	 *
	 * @param projectImagesPath the project images path of this gallery
	 */
	public void setProjectImagesPath(String projectImagesPath);

	/**
	 * Returns the gallery images ID of this gallery.
	 *
	 * @return the gallery images ID of this gallery
	 */
	public Long getGalleryImagesId();

	/**
	 * Sets the gallery images ID of this gallery.
	 *
	 * @param galleryImagesId the gallery images ID of this gallery
	 */
	public void setGalleryImagesId(Long galleryImagesId);

	/**
	 * Returns the video images ID of this gallery.
	 *
	 * @return the video images ID of this gallery
	 */
	public Long getVideoImagesId();

	/**
	 * Sets the video images ID of this gallery.
	 *
	 * @param VideoImagesId the video images ID of this gallery
	 */
	public void setVideoImagesId(Long VideoImagesId);

	/**
	 * Returns the thumbnail images ID of this gallery.
	 *
	 * @return the thumbnail images ID of this gallery
	 */
	public Long getThumbnailImagesId();

	/**
	 * Sets the thumbnail images ID of this gallery.
	 *
	 * @param thumbnailImagesId the thumbnail images ID of this gallery
	 */
	public void setThumbnailImagesId(Long thumbnailImagesId);

	/**
	 * Returns the is video of this gallery.
	 *
	 * @return the is video of this gallery
	 */
	public boolean getIsVideo();

	/**
	 * Returns <code>true</code> if this gallery is is video.
	 *
	 * @return <code>true</code> if this gallery is is video; <code>false</code> otherwise
	 */
	public boolean isIsVideo();

	/**
	 * Sets whether this gallery is is video.
	 *
	 * @param isVideo the is video of this gallery
	 */
	public void setIsVideo(boolean isVideo);

	/**
	 * Returns the is i m g of this gallery.
	 *
	 * @return the is i m g of this gallery
	 */
	public boolean getIsIMG();

	/**
	 * Returns <code>true</code> if this gallery is is i m g.
	 *
	 * @return <code>true</code> if this gallery is is i m g; <code>false</code> otherwise
	 */
	public boolean isIsIMG();

	/**
	 * Sets whether this gallery is is i m g.
	 *
	 * @param isIMG the is i m g of this gallery
	 */
	public void setIsIMG(boolean isIMG);

	/**
	 * Returns the you tube link of this gallery.
	 *
	 * @return the you tube link of this gallery
	 */
	public boolean getYouTubeLink();

	/**
	 * Returns <code>true</code> if this gallery is you tube link.
	 *
	 * @return <code>true</code> if this gallery is you tube link; <code>false</code> otherwise
	 */
	public boolean isYouTubeLink();

	/**
	 * Sets whether this gallery is you tube link.
	 *
	 * @param youTubeLink the you tube link of this gallery
	 */
	public void setYouTubeLink(boolean youTubeLink);

	/**
	 * Returns the videos imag priority of this gallery.
	 *
	 * @return the videos imag priority of this gallery
	 */
	public boolean getVideosImagPriority();

	/**
	 * Returns <code>true</code> if this gallery is videos imag priority.
	 *
	 * @return <code>true</code> if this gallery is videos imag priority; <code>false</code> otherwise
	 */
	public boolean isVideosImagPriority();

	/**
	 * Sets whether this gallery is videos imag priority.
	 *
	 * @param videosImagPriority the videos imag priority of this gallery
	 */
	public void setVideosImagPriority(boolean videosImagPriority);

	/**
	 * Returns the gallry imag priority of this gallery.
	 *
	 * @return the gallry imag priority of this gallery
	 */
	public boolean getGallryImagPriority();

	/**
	 * Returns <code>true</code> if this gallery is gallry imag priority.
	 *
	 * @return <code>true</code> if this gallery is gallry imag priority; <code>false</code> otherwise
	 */
	public boolean isGallryImagPriority();

	/**
	 * Sets whether this gallery is gallry imag priority.
	 *
	 * @param gallryImagPriority the gallry imag priority of this gallery
	 */
	public void setGallryImagPriority(boolean gallryImagPriority);

	/**
	 * Returns the demo link of this gallery.
	 *
	 * @return the demo link of this gallery
	 */
	@AutoEscape
	public String getDemoLink();

	/**
	 * Sets the demo link of this gallery.
	 *
	 * @param demoLink the demo link of this gallery
	 */
	public void setDemoLink(String demoLink);

	/**
	 * Returns the live link of this gallery.
	 *
	 * @return the live link of this gallery
	 */
	@AutoEscape
	public String getLiveLink();

	/**
	 * Sets the live link of this gallery.
	 *
	 * @param liveLink the live link of this gallery
	 */
	public void setLiveLink(String liveLink);

	/**
	 * Returns the number of this gallery.
	 *
	 * @return the number of this gallery
	 */
	public long getNumber();

	/**
	 * Sets the number of this gallery.
	 *
	 * @param number the number of this gallery
	 */
	public void setNumber(long number);

	/**
	 * Returns the create date of this gallery.
	 *
	 * @return the create date of this gallery
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this gallery.
	 *
	 * @param createDate the create date of this gallery
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this gallery.
	 *
	 * @return the modified date of this gallery
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this gallery.
	 *
	 * @param modifiedDate the modified date of this gallery
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.jio.portlet.gallery.model.Gallery gallery);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.jio.portlet.gallery.model.Gallery> toCacheModel();

	@Override
	public com.jio.portlet.gallery.model.Gallery toEscapedModel();

	@Override
	public com.jio.portlet.gallery.model.Gallery toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}