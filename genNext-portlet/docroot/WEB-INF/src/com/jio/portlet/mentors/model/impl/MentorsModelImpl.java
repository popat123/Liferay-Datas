/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.jio.portlet.mentors.model.impl;

import com.jio.portlet.mentors.model.Mentors;
import com.jio.portlet.mentors.model.MentorsModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Mentors service. Represents a row in the &quot;gn_Mentors&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.jio.portlet.mentors.model.MentorsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MentorsImpl}.
 * </p>
 *
 * @author Reliance
 * @see MentorsImpl
 * @see com.jio.portlet.mentors.model.Mentors
 * @see com.jio.portlet.mentors.model.MentorsModel
 * @generated
 */
public class MentorsModelImpl extends BaseModelImpl<Mentors>
	implements MentorsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a mentors model instance should use the {@link com.jio.portlet.mentors.model.Mentors} interface instead.
	 */
	public static final String TABLE_NAME = "gn_Mentors";
	public static final Object[][] TABLE_COLUMNS = {
			{ "mentorsId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "companyName", Types.VARCHAR },
			{ "category", Types.VARCHAR },
			{ "mentorImage", Types.BIGINT },
			{ "shortDescription", Types.VARCHAR },
			{ "longDescription", Types.VARCHAR },
			{ "number_", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table gn_Mentors (mentorsId LONG not null primary key,name VARCHAR(75) null,companyName VARCHAR(75) null,category VARCHAR(75) null,mentorImage LONG,shortDescription STRING null,longDescription STRING null,number_ LONG,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table gn_Mentors";
	public static final String ORDER_BY_JPQL = " ORDER BY mentors.mentorsId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY gn_Mentors.mentorsId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.jio.portlet.mentors.model.Mentors"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.jio.portlet.mentors.model.Mentors"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.jio.portlet.mentors.model.Mentors"));

	public MentorsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _mentorsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setMentorsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _mentorsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Mentors.class;
	}

	@Override
	public String getModelClassName() {
		return Mentors.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("mentorsId", getMentorsId());
		attributes.put("name", getName());
		attributes.put("companyName", getCompanyName());
		attributes.put("category", getCategory());
		attributes.put("mentorImage", getMentorImage());
		attributes.put("shortDescription", getShortDescription());
		attributes.put("longDescription", getLongDescription());
		attributes.put("number", getNumber());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long mentorsId = (Long)attributes.get("mentorsId");

		if (mentorsId != null) {
			setMentorsId(mentorsId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		String companyName = (String)attributes.get("companyName");

		if (companyName != null) {
			setCompanyName(companyName);
		}

		String category = (String)attributes.get("category");

		if (category != null) {
			setCategory(category);
		}

		Long mentorImage = (Long)attributes.get("mentorImage");

		if (mentorImage != null) {
			setMentorImage(mentorImage);
		}

		String shortDescription = (String)attributes.get("shortDescription");

		if (shortDescription != null) {
			setShortDescription(shortDescription);
		}

		String longDescription = (String)attributes.get("longDescription");

		if (longDescription != null) {
			setLongDescription(longDescription);
		}

		Long number = (Long)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getMentorsId() {
		return _mentorsId;
	}

	@Override
	public void setMentorsId(long mentorsId) {
		_mentorsId = mentorsId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public String getCompanyName() {
		if (_companyName == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyName;
		}
	}

	@Override
	public void setCompanyName(String companyName) {
		_companyName = companyName;
	}

	@Override
	public String getCategory() {
		if (_category == null) {
			return StringPool.BLANK;
		}
		else {
			return _category;
		}
	}

	@Override
	public void setCategory(String category) {
		_category = category;
	}

	@Override
	public Long getMentorImage() {
		return _mentorImage;
	}

	@Override
	public void setMentorImage(Long mentorImage) {
		_mentorImage = mentorImage;
	}

	@Override
	public String getShortDescription() {
		if (_shortDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _shortDescription;
		}
	}

	@Override
	public void setShortDescription(String shortDescription) {
		_shortDescription = shortDescription;
	}

	@Override
	public String getLongDescription() {
		if (_longDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _longDescription;
		}
	}

	@Override
	public void setLongDescription(String longDescription) {
		_longDescription = longDescription;
	}

	@Override
	public Long getNumber() {
		return _number;
	}

	@Override
	public void setNumber(Long number) {
		_number = number;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Mentors.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Mentors toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Mentors)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		MentorsImpl mentorsImpl = new MentorsImpl();

		mentorsImpl.setMentorsId(getMentorsId());
		mentorsImpl.setName(getName());
		mentorsImpl.setCompanyName(getCompanyName());
		mentorsImpl.setCategory(getCategory());
		mentorsImpl.setMentorImage(getMentorImage());
		mentorsImpl.setShortDescription(getShortDescription());
		mentorsImpl.setLongDescription(getLongDescription());
		mentorsImpl.setNumber(getNumber());
		mentorsImpl.setGroupId(getGroupId());
		mentorsImpl.setCompanyId(getCompanyId());
		mentorsImpl.setCreateDate(getCreateDate());
		mentorsImpl.setModifiedDate(getModifiedDate());

		mentorsImpl.resetOriginalValues();

		return mentorsImpl;
	}

	@Override
	public int compareTo(Mentors mentors) {
		long primaryKey = mentors.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Mentors)) {
			return false;
		}

		Mentors mentors = (Mentors)obj;

		long primaryKey = mentors.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Mentors> toCacheModel() {
		MentorsCacheModel mentorsCacheModel = new MentorsCacheModel();

		mentorsCacheModel.mentorsId = getMentorsId();

		mentorsCacheModel.name = getName();

		String name = mentorsCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			mentorsCacheModel.name = null;
		}

		mentorsCacheModel.companyName = getCompanyName();

		String companyName = mentorsCacheModel.companyName;

		if ((companyName != null) && (companyName.length() == 0)) {
			mentorsCacheModel.companyName = null;
		}

		mentorsCacheModel.category = getCategory();

		String category = mentorsCacheModel.category;

		if ((category != null) && (category.length() == 0)) {
			mentorsCacheModel.category = null;
		}

		mentorsCacheModel.mentorImage = getMentorImage();

		mentorsCacheModel.shortDescription = getShortDescription();

		String shortDescription = mentorsCacheModel.shortDescription;

		if ((shortDescription != null) && (shortDescription.length() == 0)) {
			mentorsCacheModel.shortDescription = null;
		}

		mentorsCacheModel.longDescription = getLongDescription();

		String longDescription = mentorsCacheModel.longDescription;

		if ((longDescription != null) && (longDescription.length() == 0)) {
			mentorsCacheModel.longDescription = null;
		}

		mentorsCacheModel.number = getNumber();

		mentorsCacheModel.groupId = getGroupId();

		mentorsCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			mentorsCacheModel.createDate = createDate.getTime();
		}
		else {
			mentorsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			mentorsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			mentorsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return mentorsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{mentorsId=");
		sb.append(getMentorsId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", companyName=");
		sb.append(getCompanyName());
		sb.append(", category=");
		sb.append(getCategory());
		sb.append(", mentorImage=");
		sb.append(getMentorImage());
		sb.append(", shortDescription=");
		sb.append(getShortDescription());
		sb.append(", longDescription=");
		sb.append(getLongDescription());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.jio.portlet.mentors.model.Mentors");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>mentorsId</column-name><column-value><![CDATA[");
		sb.append(getMentorsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyName</column-name><column-value><![CDATA[");
		sb.append(getCompanyName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category</column-name><column-value><![CDATA[");
		sb.append(getCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mentorImage</column-name><column-value><![CDATA[");
		sb.append(getMentorImage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>shortDescription</column-name><column-value><![CDATA[");
		sb.append(getShortDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longDescription</column-name><column-value><![CDATA[");
		sb.append(getLongDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Mentors.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Mentors.class
		};
	private long _mentorsId;
	private String _name;
	private String _companyName;
	private String _category;
	private Long _mentorImage;
	private String _shortDescription;
	private String _longDescription;
	private Long _number;
	private long _groupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private Mentors _escapedModel;
}